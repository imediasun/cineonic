version: '3.8'

services:
  back-office:
    build:
      context: ./
      dockerfile: docker/etc/nodejs/Dockerfile
    working_dir: /app
    command: ["npm", "run", "serve"]
    ports:
      - 3000:8080
      #- 8080:8080
    environment:
      NODE_ENV: "development"
    volumes:
      - ./back-office:/app
      - ./back-office/.env:/app/.env
    networks:
      - default
    depends_on:
      - cineonic-api-backend

  cineonic-api-backend:
    env_file: .env
    build:
      context: ./
      dockerfile: docker/etc/php-fpm/Dockerfile
    volumes:
      - ./api-backend:/var/www
    expose:
      - 8000
    ports:
      - "8000:8000"
    networks:
      default:
        aliases:
          - ${APP_HOST}
    working_dir: /var/www
    command: php artisan serve --host=0.0.0.0 --port=8000
    depends_on:
      - mysql
      - redis
      - mailhog

  caddy:
     image: caddy:latest
     ports:
       - 8008:8080
     volumes:
       - ./docker/etc/caddy/Caddyfile:/app/Caddyfile
     command: caddy run --config /app/Caddyfile
     networks:
       default:
         aliases:
           - api.backend.test

  queue:
    #env_file: .env
    build:
      context: ./
      dockerfile: docker/etc/php-fpm/Dockerfile
    volumes:
      - ./api-backend:/var/www
    working_dir: /var/www
    command: php artisan queue:work --daemon --timeout=600
    depends_on:
      - mysql
      - redis
    networks:
      - default

  redis:
    image: redis:alpine
    environment:
      REDIS_PASSWORD: "9A7Kz2QcYaJ3ehn"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
      - default

  mailhog:
    image: mailhog/mailhog:latest
    container_name: cineonic_mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - default

  echo:
    image: node:latest
    env_file:
      - .env
      - echo/.env
    volumes:
      - ./echo:/app
    working_dir: /app
    command: bash -c "
      rm -f laravel-echo-server.lock
      && npm run start"
    ports:
      - 6001:6001
    depends_on:
      - redis
      - cineonic-api-backend
    networks:
      - default

  mysql:
    container_name: mysql
    platform: linux/x86_64
    image: mysql:5.7
    ports:
      - 3306:3306
    restart: always
    environment:
      - MYSQL_DATABASE=cineonic
      - MYSQL_USER=cineonic
      - MYSQL_PASSWORD=cineonic
      - MYSQL_ROOT_PASSWORD=cineonic
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - default

volumes:
  redis_data:
  mysqldata:
    driver: local

networks:
  default:
    driver: bridge